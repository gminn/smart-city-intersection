# coding: utf-8

"""
    Mcity Control API

    Mcity implementation of OCTANE RESTful/Websocket API designed for autonomous and connected vehicle test facilities/cities.  # noqa: E501

    OpenAPI spec version: 0.0.10
    Contact: mcity-engineering@umich.edu
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.web_sockets_events_api import WebSocketsEventsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestWebSocketsEventsApi(unittest.TestCase):
    """WebSocketsEventsApi unit test stubs"""

    def setUp(self):
        self.api = api.web_sockets_events_api.WebSocketsEventsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_octane_auth_fail_get(self):
        """Test case for octane_auth_fail_get

        Event emitted to user if authentication through socket.io fails. User is then disconnected.  # noqa: E501
        """
        pass

    def test_octane_auth_ok_get(self):
        """Test case for octane_auth_ok_get

        Event emitted on success of authentication.  # noqa: E501
        """
        pass

    def test_octane_auth_post(self):
        """Test case for octane_auth_post

        Event emitted to server when user wishes to authenticate.  # noqa: E501
        """
        pass

    def test_octane_channels_get(self):
        """Test case for octane_channels_get

        Emitted in response to request for OCTANE channels.  # noqa: E501
        """
        pass

    def test_octane_channels_post(self):
        """Test case for octane_channels_post

        Event to be submitted to request current users channels and all valid channels.  # noqa: E501
        """
        pass

    def test_octane_crosswalk_request_get(self):
        """Test case for octane_crosswalk_request_get

        Event emitted when a request to a railcrossing is being serviced.  # noqa: E501
        """
        pass

    def test_octane_crosswalk_update_get(self):
        """Test case for octane_crosswalk_update_get

        Event emitted on update of railcrossing state.  # noqa: E501
        """
        pass

    def test_octane_facility_message_get(self):
        """Test case for octane_facility_message_get

        Event emitted for scheduling notifications, staff request, or emergency.  # noqa: E501
        """
        pass

    def test_octane_facility_request_get(self):
        """Test case for octane_facility_request_get

        Event emitted for facility wide requests.  # noqa: E501
        """
        pass

    def test_octane_facility_update_get(self):
        """Test case for octane_facility_update_get

        Event emitted for facility wide status updates.  # noqa: E501
        """
        pass

    def test_octane_garage_request_get(self):
        """Test case for octane_garage_request_get

        Event published when request to change state was made on this garage.  # noqa: E501
        """
        pass

    def test_octane_garage_update_get(self):
        """Test case for octane_garage_update_get

        Event emitted when the state of a garage is updated.  # noqa: E501
        """
        pass

    def test_octane_gate_request_get(self):
        """Test case for octane_gate_request_get

        Event emitted when a request to a gate is being serviced.  # noqa: E501
        """
        pass

    def test_octane_gate_update_get(self):
        """Test case for octane_gate_update_get

        Event emitted on update of gate state.  # noqa: E501
        """
        pass

    def test_octane_intersection_request_get(self):
        """Test case for octane_intersection_request_get

        Event published when request to change state was made on this intersection.  # noqa: E501
        """
        pass

    def test_octane_intersection_update_get(self):
        """Test case for octane_intersection_update_get

        Event emitted when the state of an intersection is updated.  # noqa: E501
        """
        pass

    def test_octane_ipc_message_get(self):
        """Test case for octane_ipc_message_get

        Event emitted to other users when a client emits an IPC message to others listening.  # noqa: E501
        """
        pass

    def test_octane_join_get(self):
        """Test case for octane_join_get

        Event emitted to other users when a user joins a channel successfully.  # noqa: E501
        """
        pass

    def test_octane_join_post(self):
        """Test case for octane_join_post

        Event to be submitted for user to join a specified channel.  # noqa: E501
        """
        pass

    def test_octane_leave_get(self):
        """Test case for octane_leave_get

        Event emitted to other users when a user leaves a channel successfully.  # noqa: E501
        """
        pass

    def test_octane_leave_post(self):
        """Test case for octane_leave_post

        Event to be submitted for user to leave a specified channel.  # noqa: E501
        """
        pass

    def test_octane_light_request_get(self):
        """Test case for octane_light_request_get

        Event published when request to change state was made on this light.  # noqa: E501
        """
        pass

    def test_octane_light_update_get(self):
        """Test case for octane_light_update_get

        Event emitted when the state of a light is updated.  # noqa: E501
        """
        pass

    def test_octane_railcrossing_request_get(self):
        """Test case for octane_railcrossing_request_get

        Event emitted when a request to a railcrossing is being serviced.  # noqa: E501
        """
        pass

    def test_octane_railcrossing_update_get(self):
        """Test case for octane_railcrossing_update_get

        Event emitted on update of railcrossing state.  # noqa: E501
        """
        pass

    def test_octane_sensor_request_get(self):
        """Test case for octane_sensor_request_get

        Event published when request to change state was made on this sensor.  # noqa: E501
        """
        pass

    def test_octane_sensor_update_get(self):
        """Test case for octane_sensor_update_get

        Event emitted when the state of a sensor is updated.  # noqa: E501
        """
        pass

    def test_octane_signal_request_get(self):
        """Test case for octane_signal_request_get

        Event emitted when a request to a signal is being serviced.  # noqa: E501
        """
        pass

    def test_octane_signal_update_get(self):
        """Test case for octane_signal_update_get

        Event emitted on update of signal state.  # noqa: E501
        """
        pass

    def test_octane_user_message_get(self):
        """Test case for octane_user_message_get

        Event emitted to other users when a user emits in the user channel.  # noqa: E501
        """
        pass

    def test_octane_user_message_post(self):
        """Test case for octane_user_message_post

        Event to be submitted for broadcast to the user channel only.  # noqa: E501
        """
        pass

    def test_octane_v2x_bsm_get(self):
        """Test case for octane_v2x_bsm_get

        On receipt of a V2X BSM message, this event is emitted with a parsed version of the message.  # noqa: E501
        """
        pass

    def test_octane_v2x_bsm_post(self):
        """Test case for octane_v2x_bsm_post

        Broadcast a V2X BSM message through an RSU  # noqa: E501
        """
        pass

    def test_octane_v2x_new_get(self):
        """Test case for octane_v2x_new_get

        COMING SOON - Event emitted when a new V2X device is heard from and added to the V2X device listing.  # noqa: E501
        """
        pass

    def test_octane_v2x_psm_get(self):
        """Test case for octane_v2x_psm_get

        On receipt of a V2X PSM message, this event is emitted with a parsed version of the message.  # noqa: E501
        """
        pass

    def test_octane_v2x_psm_post(self):
        """Test case for octane_v2x_psm_post

        Broadcast a V2X BSM message through an RSU  # noqa: E501
        """
        pass

    def test_octane_v2x_raw_get(self):
        """Test case for octane_v2x_raw_get

        Event emitted on message between V2X devices.  # noqa: E501
        """
        pass

    def test_octane_v2x_request_get(self):
        """Test case for octane_v2x_request_get

        Event emitted on request to a V2X device.  # noqa: E501
        """
        pass

    def test_octane_v2x_s_pa_t_get(self):
        """Test case for octane_v2x_s_pa_t_get

        On receipt of a V2X SPaT message, this event is emitted with a parsed version of the message.  # noqa: E501
        """
        pass

    def test_octane_v2x_update_get(self):
        """Test case for octane_v2x_update_get

        Event emitted on update of V2X device state.  # noqa: E501
        """
        pass

    def test_octane_weather_alert_get(self):
        """Test case for octane_weather_alert_get

        Event emitted to users when a new weather alert is broadcast.  # noqa: E501
        """
        pass

    def test_octane_weather_alert_update_get(self):
        """Test case for octane_weather_alert_update_get

        Event emitted to users when a weather alert is sent to OCTANE.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
